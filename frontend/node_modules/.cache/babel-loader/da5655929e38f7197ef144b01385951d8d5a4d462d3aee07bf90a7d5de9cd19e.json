{"ast":null,"code":"var _jsxFileName = \"/home/miika/webproject/LukittuLeffa/frontend/src/components/pages/jsxfiles/Testfetch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testfetch = () => {\n  _s();\n  const [movieInfo, setmovieInfo] = useState(null);\n  const movieIdToFind = 553287; // Replace with the desired movieid\n\n  const fetchmovieInfo = async () => {\n    try {\n      const response = await fetch(`http://localhost:3002/movie/${movieIdToFind}`);\n      const data = await response.json();\n      setUserInfo(data);\n    } catch (error) {\n      console.error('Error fetching user information:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchmovieInfo,\n      children: \"Fetch User Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), movieInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Testfetch, \"sSZatx3xRHb4VUPxYm7tR68InMo=\");\n_c = Testfetch;\nexport default Testfetch;\nvar _c;\n$RefreshReg$(_c, \"Testfetch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Testfetch","_s","movieInfo","setmovieInfo","movieIdToFind","fetchmovieInfo","response","fetch","data","json","setUserInfo","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/miika/webproject/LukittuLeffa/frontend/src/components/pages/jsxfiles/Testfetch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nconst Testfetch = () => {\n  const [movieInfo, setmovieInfo] = useState(null);\n  const movieIdToFind = 553287; // Replace with the desired movieid\n\n  const fetchmovieInfo = async () => {\n    try {\n      const response = await fetch(`http://localhost:3002/movie/${movieIdToFind}`);\n      const data = await response.json();\n      setUserInfo(data);\n    } catch (error) {\n      console.error('Error fetching user information:', error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={fetchmovieInfo}>Fetch User Information</button>\n      {movieInfo && (\n        <div>\n          <p></p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Testfetch;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMQ,aAAa,GAAG,MAAM,CAAC,CAAC;;EAE9B,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BH,aAAc,EAAC,CAAC;MAC5E,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,WAAW,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAQe,OAAO,EAAET,cAAe;MAAAQ,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/DhB,SAAS,iBACRH,OAAA;MAAAc,QAAA,eACEd,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxBID,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}