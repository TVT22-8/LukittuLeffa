{"ast":null,"code":"var _jsxFileName = \"/home/miika/webproject/LukittuLeffa/frontend/src/components/pages/jsxfiles/Testfetch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testfetch = () => {\n  _s();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const movieIdToFind = 553287; // Replace with the desired movieid\n\n  const fetchMovieInfo = async () => {\n    try {\n      const response = await fetch(`http://localhost:3002/movie/${movieIdToFind}`);\n      const data = await response.json();\n      setMovieInfo(data);\n    } catch (error) {\n      console.error('Error fetching movie information:', error);\n    }\n  };\n  useEffect(() => {\n    fetchMovieInfo();\n  }, []); // Fetch data on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMovieInfo,\n      children: \"Fetch Movie Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), movieInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Title: \", movieInfo.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Testfetch, \"t+HU9HfcPK0NZ57Ic0NiPZ7AH74=\");\n_c = Testfetch;\nexport default Testfetch;\nvar _c;\n$RefreshReg$(_c, \"Testfetch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Testfetch","_s","movieInfo","setMovieInfo","movieIdToFind","fetchMovieInfo","response","fetch","data","json","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/home/miika/webproject/LukittuLeffa/frontend/src/components/pages/jsxfiles/Testfetch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Testfetch = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const movieIdToFind = 553287; // Replace with the desired movieid\n\n  const fetchMovieInfo = async () => {\n    try {\n      const response = await fetch(`http://localhost:3002/movie/${movieIdToFind}`);\n      const data = await response.json();\n      setMovieInfo(data);\n    } catch (error) {\n      console.error('Error fetching movie information:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMovieInfo();\n  }, []); // Fetch data on component mount\n\n  return (\n    <div>\n      <button onClick={fetchMovieInfo}>Fetch Movie Information</button>\n      {movieInfo && (\n        <div>\n          <p>Title: {movieInfo.title}</p>\n          {/* Add more properties as needed */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Testfetch;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMQ,aAAa,GAAG,MAAM,CAAC,CAAC;;EAE9B,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BH,aAAc,EAAC,CAAC;MAC5E,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCN,YAAY,CAACK,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdQ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAQc,OAAO,EAAER,cAAe;MAAAO,QAAA,EAAC;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChEf,SAAS,iBACRH,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAAa,QAAA,GAAG,SAAO,EAACV,SAAS,CAACgB,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CA7BID,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}