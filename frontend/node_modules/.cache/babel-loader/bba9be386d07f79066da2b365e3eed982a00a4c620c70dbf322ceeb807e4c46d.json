{"ast":null,"code":"var _jsxFileName = \"/home/miika/webproject/LukittuLeffa/frontend/src/components/pages/jsxfiles/Testfetch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testfetch = () => {\n  _s();\n  const [movieId, setMovieId] = useState(''); // State to store the entered movieId\n  const toimi = data;\n  const fetchMovieInfo = async () => {\n    try {\n      const response = await fetch(`http://localhost:3002/tmdb/movie/${movieId}`);\n      const data = await response.json();\n      JSON.parse(data); // Handle the data as needed\n\n      /*const jsonString = data;\n      const jsonObject = JSON.parse(jsonString);*/\n    } catch (error) {\n      console.error('Error fetching movie information:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter Movie ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: movieId,\n        onChange: e => setMovieId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMovieInfo,\n      children: \"Fetch Movie Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Title: \", toimi.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Testfetch, \"g02f0BbIb3Kgb2/FUcH7wmz9c8E=\");\n_c = Testfetch;\nexport default Testfetch;\nvar _c;\n$RefreshReg$(_c, \"Testfetch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Testfetch","_s","movieId","setMovieId","toimi","data","fetchMovieInfo","response","fetch","json","JSON","parse","error","console","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","_c","$RefreshReg$"],"sources":["/home/miika/webproject/LukittuLeffa/frontend/src/components/pages/jsxfiles/Testfetch.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Testfetch = () => {\n  const [movieId, setMovieId] = useState(''); // State to store the entered movieId\n  const toimi = data;\n\n  const fetchMovieInfo = async () => {\n    try {\n      const response = await fetch(`http://localhost:3002/tmdb/movie/${movieId}`);\n      const data = await response.json();\n      JSON.parse(data); // Handle the data as needed\n      \n      /*const jsonString = data;\n      const jsonObject = JSON.parse(jsonString);*/\n      \n    } catch (error) {\n      console.error('Error fetching movie information:', error);\n    }\n  };\n\n  return (\n    <div>\n      <label>\n        Enter Movie ID:\n        <input type=\"text\" value={movieId} onChange={(e) => setMovieId(e.target.value)} />\n      </label>\n      <button onClick={fetchMovieInfo}>Fetch Movie Information</button>\n      <p>Title: {toimi.title}</p>\n    </div>\n  );\n};\n\nexport default Testfetch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAMO,KAAK,GAAGC,IAAI;EAElB,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCN,OAAQ,EAAC,CAAC;MAC3E,MAAMG,IAAI,GAAG,MAAME,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClCC,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAAC,CAAC;;MAElB;AACN;IAEI,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,oBACEb,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,GAAO,iBAEL,eAAAf,OAAA;QAAOgB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEd,OAAQ;QAACe,QAAQ,EAAGC,CAAC,IAAKf,UAAU,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,eACRxB,OAAA;MAAQyB,OAAO,EAAElB,cAAe;MAAAQ,QAAA,EAAC;IAAuB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjExB,OAAA;MAAAe,QAAA,GAAG,SAAO,EAACV,KAAK,CAACqB,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAACtB,EAAA,CA5BID,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}